{"version":3,"sources":["webpack:///webpack/bootstrap 00ac47e5c729ca136a25","webpack:///./index.js","webpack:///./wdf/utils.js","webpack:///./~/lodash/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./wdf/DataFrame.js"],"names":["module","exports","utils","require","DataFrame","pad_with","input","template","r","String","length","substr","pad_with_zeros","n","new_date","in_utc","components","Date","UTC","apply","u$","new_Object","parse_date","s","pkey","DATE_PATTERNS","m","regexp","exec","generic_order","a","b","Type","name","props","this","is","from_string","notnull_to_string","ensureString","to_string","v","isNullish","missing","_","isNull","order","compare","orderNullsFirst","types","isUint32","isNumber","testFor","condition","predicates","assert","Array","prototype","call","f","isUndefined","isPrimitive","isString","isBoolean","isFunction","isDate","isArrayEmpty","array","isArray","isStringEmpty","trim","numDefault","default_v","isNaN","brodcastCall","brodcastTo","funcName","args","vocal","forEach","castTo","error","message","obj","constructor","push","Function","bind","extractFunctionName","toString","match","getPropertyExtractor","property","o","combineKeyExtractors","extractors","extractArray","arguments","i","key","undefined","arg","slice","binarySearch","searchFor","comparator","mapper","mid","mapToValue","x","min","max","repeat","value","result","convertListToObject","extractor","k","convertFunctionsToObject","funcList","applyOnAll","action","hasOwnProperty","join","collection","delimiter","toValue","keys","isTypedArray","Object","doDelimit","fromBegining","fromEnd","indexFromBegining","indexFromEnd","filterChars","filter","at","charAt","detectRepeatingChar","prefix_ch","ch","detectPrefix","prefix","params","err","Error","_message","isPlainObject","assign","size","JSON","stringify","provided","expected","check","equals","some","YYYY_MM_DDThh_mm_ss","delims","YYYY_MM_DD_hh_mm_ss","YYYYMMDD_hhmmss","YYYYMMDDhhmmss","YYYY_MM_DD","YYYYMMDD","DATE_FIELD_SIZES","pattern_texts","map","RegExp","date_from_string","dt","getTime","datetime_from_string","date_components","d","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","utc_components","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","SUPPORTED_DATE_FORMATS","date_to_string_fn","format","components_fn","d_values","dateToIsoString","date","toISOString","parseDateUTC","parseDate","relativeDateString","rel","Math","abs","floor","h","BiMap","inverse","_inverse","forward","get","val","put","del","values","Tokenizer","delimiters","isValueChar","indexOf","next","start","substring","getText","nextValue","nextDelimiter","getPosition","setPosition","_i","splitUrlPath","urlpath","path","split","last","variables","vars","sep","encodeURI","part","item","decodeURIComponent","orderChain","funcs","rc","res","orderPredicateFirst","indexOrder","valueOrder","valueArray","extractValuesByIndex","indexArray","idx","createIndex","range","orderInverse","splice","addTypes","typesMap","typeName","NANs","BOOLEAN_STRINGS","string","number","NaN","boolean","toLowerCase","datetime","valueOf","detect_possible_array_types","str_array","options","hasMissing","type","eligible_types","parsed","PRIORITIES","choose_column_type","ops","baseCompareAscending","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","chars","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","data","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","hash","nativeCreate","set","Set","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","baseAssign","baseCopy","baseAt","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","baseGet","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","thru","getFuncName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","nativeCeil","createPartialWrapper","createRound","methodName","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","replace","rePropName","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","find","includes","pluck","reject","sample","toArray","rand","shuffle","sortBy","sortByOrder","where","after","temp","before","debounce","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","id","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isElement","nodeType","isEmpty","isEqual","isError","isFinite","isMatch","reIsNative","fnToString","reIsHostCtor","isRegExp","typedArrayTags","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","nativeParseInt","reHasHexPrefix","startsWith","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","global","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","oldDash","noop","propertyOf","step","times","MAX_ARRAY_LENGTH","uniqueId","idCounter","augend","addend","sum","defaults","pick","contextProps","Number","arrayProto","objectProto","stringProto","WeakMap","ceil","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","countBy","findLast","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","kebabCase","padLeft","padRight","snakeCase","startCase","e","method","methodOf","round","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","c","t","u","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","moduleExports","amd","webpackPolyfill","deprecate","paths","children","make_df_from_","array_of_rows","header","shift","parse_csv_to_array_of_rows","str","row","col","arr","cc","nc","parse_dom_table_to_array_of_rows","dom_table","rows","cells","textContent","Column","len","ColumnSet","byIndex","byName","getColumn","name_or_idx","enforceColumn","n_rows","col_idx","enforceColumnAt","addColumns","cols","columns","columnSet","row_data","msg","parse_csv","parse_dom_table","getRow","row_num","ph_row","getRowCount","newRow","new_row_num","deleteRow","logic","collector","column","col_def","df","getObjects"],"mappings":"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","file":"wdf.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 00ac47e5c729ca136a25\n **/","module.exports = {\n  utils: require(\"./wdf/utils\"),\n  DataFrame: require(\"./wdf/DataFrame\"),\n};\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","//  misc utilities. Initialize it like:\n//  ```\n//    var u$ = requre(\"wdf/utils\");\n//  ```\n\"use strict\";\nvar u$ = module.exports = {} ;\nvar _ = require(\"lodash\");\n\n//\n// ## Detect Types\n\n\n// **isUint32(o)**\n//\n// `true` if `o` is whole number\nu$.isUint32=function(a) {\n  return _.isNumber(a) && a >= 0 && a <= 0xFFFFFFFF && a % 1 === 0 ;\n};\n\n// ** testFor(a,condition,predicates) **\n//\n//  * `a` - to test\n//  * `condition` - `'some'` or `'every'`\n//  *\nu$.testFor = function (a,condition,predicates){\n  u$.assert(condition,['some','every']);\n  return Array.prototype[condition].call(predicates,\n      function(f){return f(a)});\n};\n\n// **isNullish(o)**\n//\n// `true` if `o` is boolean\nu$.isNullish=function(a) {\n  return _.isNull(a) || _.isUndefined(a);\n};\n\n\n// **isPrimitive(a)**\n//\n// returns `true` if `a` is build-in non composite type\nu$.isPrimitive=function(a) {\n  return _.isString(a) || _.isNumber(a) || _.isBoolean(a) ||\n      _.isFunction(a) || _.isDate(a);\n};\n\n\n// **isArrayEmpty(array)**\n//\n// returns `true` if `array` is nullish or empty\nu$.isArrayEmpty=function(array){\n  return u$.isNullish(array) || (_.isArray(array) && array.length === 0);\n};\n\n\n// **isStringEmpty(s)**\n//\n// returns `true` if `s` is nullish or empty string\nu$.isStringEmpty=function(s){\n  return u$.isNullish(s) || ( _.isString(s) && s.trim().length === 0);\n};\n\n\n// **numDefault(v,default_v)**\n//\n// returns `default_v` if `v` is Nullish or NaN, otherwise returns `v`\nu$.numDefault=function(v,default_v){\n  if(u$.isNullish(v) || isNaN(v)){\n    return default_v;\n  }\n  return v;\n};\n\n\n// ## Function Utils\n\n//**brodcastCall(brodcastTo, funcName, args, vocal)**\n//\n// call method with `funcName` on each object from `brodcastTo`\n// array. `args` passed for each of these calls. `vocal` - optional\n// controls error throwing behavior, default or false be silent -\n// do not throw exceptions.\nu$.brodcastCall=function(brodcastTo, funcName, args, vocal){\n  vocal = vocal || false;\n  if(! u$.isArrayEmpty(brodcastTo) ){\n    brodcastTo.forEach(\n        function(castTo){\n          var f = castTo[funcName];\n          if( _.isFunction(f) ){\n            f.apply(castTo,args);\n          }else if( vocal ){\n            throw u$.error({message: \"No such function\", funcName: funcName, obj: castTo });\n          }\n        }\n    );\n  }\n};\n\n\n//** new_Object(constructor, args) **\n//\n// Call `constructor` passing variable number of `args` as  array\n\nu$.new_Object = function(constructor, args) {\n  var a = [null];\n  Array.prototype.push.apply(a,args);\n  return new (Function.prototype.bind.apply(constructor, a));\n};\n\n\n// ** extractFunctionName(f) **\n//\n// extract function name. Does not work for lambas:\n//\n//  ```\n//  > function abc(){}\n//  > u$.extractFunctionName(abc);\n//   \"abc\"\n//  > var xyz = function(){}\n//  > u$.extractFunctionName(xyz)\n//   \"\"\n//  >\n//  ```\nu$.extractFunctionName=function(f) { // because IE does not support Function.prototype.name property\n  var m = f.toString().match(/^\\s*function\\s*([^\\s(]+)/);\n  return m ? m[1] : \"\";\n};\n\n\n// ** getPropertyExtractor(property)**\n//\n// create extractor function that extract property out of object by name:\n//\n//  ```\n//  > var len = u$.getPropertyExtractor(\"length\") ;\n//  > len([0,2,4])\n//   3\n//  >\n//  ```\nu$.getPropertyExtractor=function(property) {\n  return function(o) {\n    return o[property];\n  };\n};\n\n\n// ** combineKeyExtractors(...extractors)**\n//\n// create function that call extractror functions one by one\n// and first `value !== undefined` get returned:\n//\n//  ```\n//  > var len = u$.combineKeyExtractors(['len','size']\n//                     .map(u$.getPropertyExtractor)) ;\n//  > len({size: 3})\n//   3\n//  > len({len: 5})\n//   4\n//  > len({a: 5})\n//   undefined\n//  >\n//  ```\nu$.combineKeyExtractors=function() {\n  var extractors = u$.extractArray(arguments);\n  return function(o) {\n    for ( var i = 0; i < extractors.length; i++) {\n      var key = extractors[i](o);\n      if(key !== undefined){\n        return key;\n      }\n    }\n    return undefined;\n  };\n};\n\n\n//## Collections utils\n\n// ** extractArray(args) **\n//\n// Take arguments object and convert it to array.\n// Useful if you want to consume all arguments of\n// function as elements of one array, yet you want to allow\n// possibility to pass all of them in one argument as\n// array as well.\n//\n// ```\n//  > function x(){\n//  ...     var args = u$.extractArray(arguments);\n//  ...     console.log(args);\n//  ...  }\n//  > x(\"a\",\"b\");\n//   [\"a\", \"b\"]\n//  > var arr=[\"z\",\"y\"];\n//  > x(arr);\n//   [\"z\", \"y\"]\n// ```\nu$.extractArray=function(args) {\n  if ( !args || args.length === 0) {\n    return [];\n  } else if (args.length === 1) {\n    var arg = args[0];\n    if (_.isArray(arg)) {\n      return arg;\n    }\n  }\n  return Array.prototype.slice.call(args);\n};\n\n\n// **binarySearch(searchFor, array, comparator, mapper)  **\n//\n// search sorted `array` and return index of element that match\n// `searchFor`. If index positive it points on exact matched\n// element. If negative - no match found, and value of `1 - negative_index`\n// will point to where such element should be located in `array`.  `mapper(array_elem)`\n// allow for optional level of indirection, and map value from `array`\n// to object that will be compared with `searchFor`. `comparator(a,b)` is logic\n// that compare objects. It is a order function that roughly does\n// something like: `a < b ? -1 : a > b ? 1 : 0`\n//\n// ```\n//  > var array = [ 1, 2, 4, 6, 8, 10, 25 ];\n//  > u$.binarySearch(4, array, t$.number.compare);\n//   2\n//  > u$.binarySearch(7, array, t$.number.compare);\n//   -5\n// ```\nu$.binarySearch=function(searchFor, array, comparator, mapper) {\n  var mapToValue = mapper || function(x) {\n        return x;\n      };\n  var min = 0;\n  var max = array.length - 1;\n  var mid, r;\n  while (min <= max) {\n    mid = ((min + max) / 2) | 0;\n    r = comparator(searchFor, mapToValue(array[mid]));\n    if (r > 0) {\n      min = mid + 1;\n    } else if (r < 0) {\n      max = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n  return -1 - min;\n};\n\n\n//**repeat(n,value)**\n//\n// repeats `value` in array `n` times.  If `value` is function\n// result of `value(i)` call will be stored in array instead.\n\nu$.repeat=function(n, value) {\n  var result = [];\n  for ( var i = 0; i < n; i++) {\n    result.push(_.isFunction(value) ? value(i) : value);\n  }\n  return result;\n};\n\n//**convertListToObject(array,extractor) **\n//\n// converts array to object.  `extractor(v)` retrieve key  from each\n// element of array. If key is defined key-value pair will be stored\n// in object.\nu$.convertListToObject=function(array,extractor) {\n  var obj = {};\n  for ( var i = 0; i < array.length; i++) {\n    var v = array[i];\n    var k = extractor(v);\n    if( k !== undefined ){\n      obj[k] = v;\n    }\n  }\n  return obj;\n};\n\n\n//** convertFunctionsToObject(funcList)**\n//\n// Extract name of functions and use them as keys to reshape `funcList` array\n// to object.\nu$.convertFunctionsToObject=function(funcList) {\n  return u$.convertListToObject(funcList,\n      u$.combineKeyExtractors(\n          u$.getPropertyExtractor(\"name\"),\n          u$.extractFunctionName));\n};\n\n\n//** applyOnAll(obj, action) **\n//\n// apply `action(v,k,obj)` on all elements of `obj`\n// object\nu$.applyOnAll=function(obj, action) {\n  for ( var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      action(obj[k], k, obj);\n    }\n  }\n};\n\n\n\n//** join(collection, delimiter, toValue)**\n//\n// join elements of `collection`\n//   * `collection` - array or object.\n//   * `delimiter` - delimiter value or function. if omitted `','`\n//     is assumed. When value provided same delimiter will be inserted\n//     in between elements of collection. With function\n//     `delimiter(collection, fromBegining, fromEnd)` you can control\n//     delimiters for each position separately including before first\n//     and after last element. Before and after delimiters set to empty\n//     string by default.\n//   * `toValue` - optional, by default identity function. transform\n//     elements before join.\nu$.join=function(collection, delimiter, toValue) {\n  var keys = _.isArray(collection)  || _.isTypedArray(collection)  ?\n      collection : Object.keys(collection) ;\n  if (!toValue) {\n    toValue = function (s) {\n      return s;\n    };\n  }\n  if (u$.isNullish(delimiter) ) {\n    delimiter = ',';\n  }\n  var doDelimit = delimiter;\n  if (!_.isFunction(delimiter)) {\n    doDelimit = function (collection, fromBegining, fromEnd) {\n      return (fromBegining < 0 || fromEnd < 0) ? '' : delimiter;\n    };\n  }\n  var indexFromBegining = -1; // -1 means delimiter before of first element\n  var indexFromEnd = keys.length-1; //it become -1 for delimiter after of last element\n  var result = '';\n  while (indexFromBegining < keys.length) {\n    if (indexFromBegining >= 0) {\n      result += toValue(keys[indexFromBegining], collection);\n    }\n    result += doDelimit(keys, indexFromBegining, indexFromEnd, collection);\n    indexFromBegining++;\n    indexFromEnd--;\n  }\n  return result;\n};\n\n\n// ## Misc\n\n//** filterChars(s,filter) **\n//\n// starting from beginning filter all characters\n// that meet `filter(char(string),index(int),whole_string(string))->boolean`\n// function requirements.\n//\n// Returns position where criteria no longer met.\nu$.filterChars=function(s,filter){\n  var at = 0 ;\n  while( at < s.length && filter(s.charAt(at),at,s) ) {\n    at++;\n  }\n  return at;\n};\n\n\n//** detectRepeatingChar(s,prefix_ch) **\n//\n// detect repeating char `prefix_ch` in beginning of the line `s`\nu$.detectRepeatingChar=function(s,prefix_ch){\n  return u$.filterChars(s,function (ch){\n    return ch === prefix_ch;\n  });\n};\n\n//** detectPrefix ( s, prefix ) **\n//\n// checks if `s` starts with `prefix`. Essentially this is the\n// same as `String.prototype.startWith(prefix)` but ES6 not quite here yet.\nu$.detectPrefix=function(s,prefix){\n  return prefix.length === u$.filterChars(s,function (ch,at){\n        return ch === prefix.charAt(at);\n      });\n};\n\n\n//** ensureString ( a ) **\n//\n// ensure String object\n\nu$.ensureString=function(a) {\n  return _.isString(a) ? a : String(a);\n};\n\n\n//**error(params,err)**\n//\n//creates error object or add params to it as it will fly by.\nu$.error=function(params,  err) {\n  err = err || new Error();\n  params = params || {};\n  if ( u$.isNullish(err._message) ) {\n    err._message  = err.message ? err.message :  params.message || '' ;\n    delete params.message;\n  }\n  if ( _.isPlainObject(err.params) ) {\n    _.assign(err.params, params);\n  }else{\n    err.params = params;\n  }\n  err.toString = function (){\n    var m =  err._message ;\n    return _.size(this.params)  ? m + \" \" + JSON.stringify(this.params) : m;\n  };\n  return err;\n};\n//** assert(provided, expected, message) **\n//\n// throws error if `provided` and `expected` are not equal.\nu$.assert=function(provided, expected, message) {\n  function check(expected) {\n    return provided === expected;\n  }\n  var equals = _.isArray(expected) ? expected.some(check) : check(expected) ;\n  if ( !equals ) {\n    throw u$.error({\n      message : message || \"Unexpected value\",\n      expected : expected,\n      provided : provided,\n    });\n  }\n};\n\n//## Parsing dates\n\n//### some private date related stuff\n\n// pad_with(input,template)\n//\n// pad `input` value according to `template`\n\n// ```\n//  > pad_with(5,'00')\n//   '05'\n//  > pad_with(5,'0000')\n//   '0005'\n// ```\nfunction pad_with(input, template) {\n  var r = String(input);\n  if (r.length !== template.length) {\n    r = (template + r).substr(r.length, template.length);\n  }\n  return r;\n}\n\n// pad_with_zeros(input,n)\n//\n// pad `input` with zeros until it reach `n` size\n//\n// ```\n//  > pad_with_zeros(5,2)\n//   '05'\n//  > pad_with_zeros(5,4)\n//   '0005'\n// ```\nfunction pad_with_zeros(input, n) {\n  var r = String(input);\n  while(r.length < n) {\n    r = '0' + r;\n  }\n  return r;\n}\n\n// define supported date patterns\nvar DATE_PATTERNS = {\n  YYYY_MM_DDThh_mm_ss: { delims: ['-','-','T',':',':'] },\n  YYYY_MM_DD_hh_mm_ss: { delims: ['-','-',' ',':',':'] },\n  YYYYMMDD_hhmmss: { delims: ['','','-','',''] },\n  YYYYMMDDhhmmss: { delims: ['','','','',''] },\n  YYYY_MM_DD: { delims: ['-','-'] },\n  YYYYMMDD: { delims: ['',''] },\n};\n\n//prepare text for regexp\nvar DATE_FIELD_SIZES = [4,2,2,2,2,2];\nvar pattern_texts = DATE_FIELD_SIZES.map(function(n){\n  var s='(';\n  while(n--){\n    s+='\\\\d';\n  }\n  return s+')';\n});\n\n// generate regexps in `DATE_PATTERNS`\nfor(var name in DATE_PATTERNS){\n  var o = DATE_PATTERNS[name];\n  var n = o.delims.length+1;\n  var s = '';\n  for (var i = 0; i < n; i++) {\n    if(i>0){\n      s += o.delims[i-1];\n    }\n    s += pattern_texts[i];\n  }\n  o.regexp=new RegExp(s);\n}\n\n// build date out of components\nfunction new_date(in_utc,components){\n  if (in_utc){\n    return new Date(Date.UTC.apply(null,components));\n  }else{\n    return u$.new_Object(Date, components);\n  }\n}\n\n// try all patters to parse string\nfunction parse_date(in_utc, s){\n  for(var pkey in DATE_PATTERNS){\n    var m = DATE_PATTERNS[pkey].regexp.exec(s);\n    if(m){\n      return new_date(in_utc, (m.length === 4) ? [+m[1],m[2]-1,+m[3]] :\n          [+m[1],m[2]-1,+m[3],+m[4],+m[5],+m[6]] );\n    }\n  }\n  return undefined;\n}\n\n//### Public Date stuff\n\n\n//** date_from_string(s)**\n//\n//  parse string into date assumning UTC timezone\nu$.date_from_string=function(s){\n  var dt = parse_date(true, s);\n  return  dt && 0 === dt.getTime() % (24 * 60 * 60 * 1000 ) ? dt : undefined ;\n};\n\n//** datetime_from_string(s)**\n//\n//  parse string into date assumning UTC timezone\nu$.datetime_from_string=function(s){\n  return parse_date(true,s);\n};\n\n\n//**date_components(d)**\n//\n// split Date object into array of components :\n// [year, month(1-12), day, hours, minutes, seconds]\n// in local time\nu$.date_components=function(d){\n  return [d.getFullYear(),d.getMonth() + 1,d.getDate(),\n    d.getHours(),d.getMinutes(),d.getSeconds()];\n};\n\n\n//**utc_components(d)**\n//\n// split Date object into array of components :\n// [year, month(1-12), day, hours, minutes, seconds]\n// in UTC time\nu$.utc_components=function(d){\n  return [d.getUTCFullYear(),d.getUTCMonth() + 1,d.getUTCDate(),\n    d.getUTCHours(),d.getUTCMinutes(),d.getUTCSeconds()];\n};\n\n//**SUPPORTED_DATE_FORMATS**\n// array of supprted  date formats names\n\n// ```\n// > SUPPORTED_DATE_FORMATS\n// [\"YYYY_MM_DDThh_mm_ss\", \"YYYY_MM_DD_hh_mm_ss\", \"YYYYMMDD_hhmmss\",\n//  \"YYYYMMDDhhmmss\", \"YYYY_MM_DD\", \"YYYYMMDD\"]\n// ```\nu$.SUPPORTED_DATE_FORMATS = Object.keys(DATE_PATTERNS);\n\n\n//**date_to_string_fn(format,components_fn)**\n//\n// create function that will convert Date object into string.\n//   * `format` - format name. See SUPPORTED_DATE_FORMATS above.\n//   * `components_fn` - (optional) one of 2 functions that to split date\n//     into components `utc_components` (default) and `date_components` .\n\nu$.date_to_string_fn=function(format,components_fn){\n  components_fn = components_fn || u$.utc_components;\n  var delims = DATE_PATTERNS[format].delims ;\n  return function(d){\n    var d_values = components_fn(d);\n    var n = delims.length+1;\n    var s = '';\n    for (var i = 0; i < n; i++) {\n      if(i > 0){\n        s += delims[i-1];\n      }\n      s += pad_with_zeros(d_values[i],DATE_FIELD_SIZES[i]);\n    }\n    return s;\n  };\n};\n//**dateToIsoString(date)**\n//\n// date to ISO-2601 string. deprecated in favor\n// of `Date.prototype.toISOString`. will be removed soon.\n//\n//\nu$.dateToIsoString=function(date) {\n  return date.toISOString();\n  /*return date.getUTCFullYear() +  '-' +\n   pad_with(date.getUTCMonth() + 1, '00') + '-' +\n   pad_with(date.getUTCDate(), '00') + 'T' +\n   pad_with(date.getUTCHours(), '00') + ':' +\n   pad_with(date.getUTCMinutes(), '00') + ':' +\n   pad_with(date.getUTCSeconds(), '00') + '.' +\n   pad_with(date.getUTCMilliseconds(), '000') + 'Z';*/\n};\n//** parseDateUTC(s) **\n//\n// parse date using on of `SUPPORTED_DATE_FORMATS`\n// assuming UTC timezone\n\nu$.parseDateUTC=function(s){\n  return parse_date(true,s);\n};\n\n//** parseDate(s) **\n//\n// parse date using on of `SUPPORTED_DATE_FORMATS`\n// assuming local timezone\n\nu$.parseDate=function(s){\n  return parse_date(false,s);\n};\n//** relativeDateString(date,rel) **\n//\n// produce string representation of UTC time in format\n//   * `+-hh:mm` if diffirence between `date` and `rel`\n//     less then 24 hours\n//   * `YYYY-MM-DD hh:mm` otherwise\n// ```\n// > relativeDateString(new Date(d.getTime()+120000),d)\n//  \"+00:02\"\n// > relativeDateString(new Date(d.getTime()-120000),d)\n//  \"-00:02\"\n// > relativeDateString(new Date(d.getTime()-1200000000),d)\n//  \"2015-10-22 08:34\"\n// ```\nu$.relativeDateString=function(date,rel) {\n  if(!_.isDate(date)){\n    if(!u$.isNullish(date)){\n      date = u$.parseDateUTC(date);\n    }else{\n      return \"\";\n    }\n  }\n  if(!_.isDate(rel)){\n    rel = new Date();\n  }\n  if( Math.abs(date.getTime() - rel.getTime()) < 86400000 ){\n    var a = Math.floor( (date.getTime() - rel.getTime())  / 1000);\n    var s = Math.abs(a) + 30;\n    var m = Math.floor( s / 60 );\n    var h = Math.floor( m / 60 );\n    s = s % 60;\n    m = m % 60;\n    return (a < 0 ? '-' : '+') + pad_with(h, '00') + ':' + pad_with(m, '00')  ;\n  }\n  return date.getUTCFullYear() + '-' +\n      pad_with(date.getUTCMonth() + 1, '00') + '-' +\n      pad_with(date.getUTCDate(), '00') + ' ' +\n      pad_with(date.getUTCHours(), '00') + ':' +\n      pad_with(date.getUTCMinutes(), '00') ;\n\n};\n\n// ## Bi-directional map\n\n// ** BiMap(map) **\n//\n// class that allow to maintain forward reference from key to value,\n// as well inverse as from value to key. If values are not unique,\n// it will be mapped to only one of the keys. Changes to `BiMap`\n// will be reflected in underlying `map` object as well. It is better\n// to use strings both as keys and values, because object keys casted\n// to strings, and we use values as keys in inverse mapping too.\n// ```\n// > var o = {}\n// > var bm = u$.BiMap(o)\n// > bm.put(5,3)\n// > bm.key(3)\n//  \"5\"\n// > bm.get(5)\n//  3\n// > bm.values()\n//  [\"3\"]\n// > bm.keys()\n//  [\"5\"]\n// > bm.put(\"x\",\"3\")\n// > bm.keys()\n//  [\"5\", \"x\"]\n// > bm.values()\n//  [\"3\"]\n// > bm.key(3)\n//  \"x\"\n// > bm.del(\"x\")\n// > bm.key(3)\n//  \"5\"\n// ```\nu$.BiMap=function(map) {\n  if( ! (this instanceof u$.BiMap) ){\n    return new u$.BiMap(map);\n  }\n  var forward = map || {};\n  var _inverse = null;\n  function inverse(){\n    if( _inverse === null ){\n      _inverse = {};\n      for ( var key in forward) {\n        if (forward.hasOwnProperty(key)) {\n          _inverse[forward[key]]=key;\n        }\n      }\n    }\n    return _inverse;\n  }\n  //`get(key)` - get value by key\n  this.get =    function(key) { return forward[key]; };\n  //`key(val)` - get key by value\n  this.key =    function(val) { return inverse()[val]; };\n  //`put(key,val)` - store key-value pair\n  this.put =    function(key,val) { forward[key] = val; _inverse = null; };\n  //`del(key)` - delete key-value pair by key\n  this.del =    function(key) { delete forward[key];_inverse = null; };\n  //`keys()` - get all keys\n  this.keys =   function() { return Object.keys(forward); };\n  //`values()` - get all distinct values\n  this.values = function() { return Object.keys(inverse()); };\n};\n\n// ## Stuff should be thrown away but I am reactant for  some reason\n\n// Tokenizer\nu$.Tokenizer=function(s, delimiters) {\n  var i = 0;\n\n  function isValueChar() {\n    return delimiters.indexOf(s.charAt(i)) < 0;\n  }\n\n  function next(condition) {\n    var start = i;\n    while (i < s.length && condition()){\n      i++;\n    }\n    return s.substring(start, i);\n  }\n\n  return {\n    getText : function() {\n      return s;\n    },\n    nextValue : function() {\n      return next(isValueChar);\n    },\n    nextDelimiter : function() {\n      return next(function() {\n        return !isValueChar();\n      });\n    },\n    toString : function() {\n      return s.substring(0, i) + \" <-i-> \" + s.substring(i);\n    },\n    getPosition : function() {\n      return i;\n    },\n    setPosition : function(_i) {\n      i = _i;\n    }\n  };\n};\n\n//** splitUrlPath(urlpath) **\n//\n// spit url path on path elements, and variables.\n//\nu$.splitUrlPath=function(urlpath) {\n  var path = urlpath.split(\"/\");\n  var last = path[path.length-1].split('?');\n  var result = {\n    path: path ,\n    variables: {},\n    toString: function(){\n      var vars = '' ;\n      var sep = '?' ;\n      for ( var k in this.variables) {\n        if (this.variables.hasOwnProperty(k)) {\n          vars += sep + k + '=' + encodeURI(this.variables[k]);\n          sep = '&';\n        }\n      }\n      return this.path.join('/') + vars;\n    }\n  };\n  if( last.length === 2 ){\n    path[path.length-1] = last[0];\n    last[1].split(\"&\").forEach(function(part) {\n      var item = part.split(\"=\");\n      if( item[0].length > 0 ){\n        result.variables[item[0]] = decodeURIComponent(item[1]);\n      }\n    });\n  }else if(last.length > 2){\n    throw 'Unexpected number of \"?\" in url :' + urlpath ;\n  }\n  return result;\n};\n\n// order functions take two arguments (let's say `a` and `b`)\n// and compare them.\n//\n// Returns:\n//   * `-1` if `a` less then `b`\n//   * `1` if `a` greater then `b`\n//   * `null` if `a` equals `b`  but you want next\n//     order function in chain have it's say\n//   * `0` if `a` equals `b` period.\n//\n// here is generic order function\nfunction generic_order(a,b){\n  return a === b ? null : a < b ? -1 : 1 ;\n}\n\nu$.types = {} ;\n\nfunction Type(name, props) {\n  this.name = name ;\n  this.is = props.is ;\n  this.from_string = props.from_string ;\n  this.notnull_to_string = props.notnull_to_string || u$.ensureString ;\n  this.to_string = props.to_string || function (v){\n        return u$.isNullish(v) ? \"\" : this.notnull_to_string(v) ;\n      };\n  this.missing = props.missing || _.isNull;\n  this.order = props.order || generic_order;\n  this.compare = u$.orderNullsFirst(this.order);\n  u$.types[name] = this;\n}\n\nu$.Type = Type;\n\n// ** orderChain(array) **\n//\n// Create chain of order functions.\nu$.orderChain = function(){\n  var funcs = u$.extractArray(arguments);\n  return function(a,b){\n    var rc = 0;\n    for (var i = 0; i < funcs.length; i++) {\n      var res = funcs[i](a,b);\n      if( res !== null ){\n        rc = res;\n        break;\n      }\n    }\n    return rc;\n  };\n};\n\n// **orderPredicateFirst(is)**\n//\n// Turn predicate function(returning `true` or `false`) into\n// order function. Order function place `true` first.\nu$.orderPredicateFirst = function (is) {\n  return function(a, b) {\n    return is(a) ? (is(b) ? 0 : -1) : (is(b) ? 1 : null);\n  };\n};\n\n// Assume we have `indexArray` and `valueArray`. We also have `valueOrder(a,b)`\n// function that capable of comparing elements of `valueArray`. `indexArray`\n// contains integers pointing to `valueArray`. That set up allow messing with\n// order or composition of `indexArray` leave order of `valueArray` unchanged.\n\n// **indexOrder (valueOrder, valueArray)**\n//\n// creates index order function for given `valueOrder(a,b)`\n\nu$.indexOrder = function (valueOrder, valueArray) {\n  return function(a, b) {\n    return valueOrder(valueArray[a],valueArray[b]);\n  };\n};\n\n// ** extractValuesByIndex (indexArray, valueArray)**\n//\n// extract values out of `valueArray` usinf `indexArray`\nu$.extractValuesByIndex = function (indexArray, valueArray) {\n  return indexArray.map(function(idx){return valueArray[idx];});\n};\n\n// ** createIndex(valueArray) **\n//\n// returns index array matching `valueArray`\nu$.createIndex = function (valueArray) {\n  return _.range(valueArray.length);\n};\n// **orderInverse(f)**\n//\n// inverse order mandated by `f(a,b)`\nu$.orderInverse = function(f) {\n  return function(a, b) {\n    return f(b, a);\n  };\n};\n//** orderNullsFirst(orderFuncArray) **\n//\n// Create order function that sort `undefined` - first, `null` - second\n// and then according to order functions provided in argument.\nu$.orderNullsFirst = function(){\n  var funcs = u$.extractArray(arguments);\n  funcs.splice(0,0,u$.orderPredicateFirst(_.isUndefined));\n  funcs.splice(1,0,u$.orderPredicateFirst(_.isNull));\n  return u$.orderChain(funcs);\n};\n// ** addTypes(typesMap) **\n//\n//    add types\nu$.addTypes=function(typesMap){\n  for(var typeName in typesMap){\n    if( typesMap.hasOwnProperty(typeName) ){\n      new Type(typeName,typesMap[typeName]);\n    }\n  }\n};\n\nvar NANs = [\"\",\"NaN\",\"null\"];\n\nvar BOOLEAN_STRINGS = [\n  \"0\",\"1\",\"n\",\"y\",\"f\",\"t\",\n  \"no\",\"yes\",\"false\",\"true\"];\n\nu$.addTypes({\n// ** string ** type\n  string: {\n    is: _.isString,\n    missing: function(s) { return u$.isNullish(s) || s === '' ; },\n    from_string: function(v){\n      return \"\" === v ? null : v ;\n    }\n  },\n// ** number ** type\n  number: {\n    is: _.isNumber,\n    missing: isNaN,\n    from_string: function(v){\n      return NANs.indexOf(v) > -1 ? NaN :  u$.numDefault(+v,undefined);\n    },\n    notnull_to_string: function(v){\n      return isNaN(v)? '' : v;\n    },\n  },\n// ** boolean ** type\n  boolean: {\n    is: _.isBoolean,\n    from_string: function(v){\n      if(''===v){\n        return null;\n      }\n      var idx = BOOLEAN_STRINGS.indexOf(v.toLowerCase());\n      return idx < 0 ? undefined : idx % 2 === 1 ;\n    },\n    order: function(a, b) {\n      return a ? (b ? null : 1) : (b ? -1 : null);\n    }\n  },\n// ** datetime ** type\n  datetime: {\n    is: _.isDate,\n    from_string: function (v) {\n      return v === '' ? null : u$.datetime_from_string(v);\n    },\n    notnull_to_string: u$.date_to_string_fn(\"YYYY_MM_DD_hh_mm_ss\"),\n    order: function(a, b) {\n      return generic_order( a.valueOf(), b.valueOf());\n    }\n  },\n// ** date ** type\n  date: {\n    is: _.isDate,\n    from_string: function (v) {\n      return v === '' ? null : u$.date_from_string(v);\n    },\n    notnull_to_string: u$.date_to_string_fn(\"YYYY_MM_DD\"),\n    order: function(a, b) {\n      return generic_order( a.valueOf(), b.valueOf());\n    }\n  }\n});\n\n// ** detect_possible_array_types(str_array) **\n//\n// takes `str_array` and detect other possible array\n// types from values\n\nu$.detect_possible_array_types=function(str_array){\n  var options={\n    string: { array: str_array, hasMissing: false , type: 'string'}\n  };\n  var eligible_types = ['date','datetime','boolean','number'] ;\n  eligible_types.forEach(function(type){\n    options[type] = { array: [] , hasMissing: false , type: type } ;\n  });\n  str_array.forEach(function(v,i){\n    if( u$.types.string.missing(v) ){\n      options['string'].hasMissing = true;\n    }\n    for(var i = 0 ; i < eligible_types.length ; ){\n      var typeName = eligible_types[i];\n      var type = u$.types[typeName];\n      var parsed = type.from_string(v);\n      if( type.missing(parsed) ){\n        options[typeName].hasMissing = true;\n      }\n      if( _.isUndefined(parsed) ){\n        delete options[typeName];\n        eligible_types.splice(i,1);\n      }else{\n        options[typeName].array.push(parsed);\n        i++;\n      }\n    }\n  });\n  return options;\n};\n\nvar PRIORITIES = [ 'number', 'date', 'datetime', 'boolean', 'string' ];\n\nu$.choose_column_type=function(ops){\n  var keys = Object.keys(ops);\n  if(keys.length == 1){\n    return ops[keys[0]];\n  }else{\n    for(var i = 0 ; i < PRIORITIES.length ; i++) {\n      if (ops.hasOwnProperty(PRIORITIES[i])) {\n        return ops[PRIORITIES[i]];\n      }\n    }\n  }\n};\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./wdf/utils.js\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/lodash/index.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** (webpack)/buildin/module.js\n **/","// ## Private stuff\n//\n// methods and classes that not supposed to be used directly\n\"use strict\";\n\nvar u$ = require(\"./utils\");\nvar _ = require(\"lodash\");\n\n// `Column` has `name`. Also `data` array is there to store all column's value.\n// Optionally if `type` defined when all `data` assumed to be casted to that type (\n// See [type](types.html) ). Also `col_idx` point on this column in column set.\n\nvar Column = function (name,len,type){\n  this.name = name;\n  this.data = [];\n  if( len ){\n    this.data.length = len ;\n  }\n  this.type = type ;\n};\n\n// ColumnSet - store all columns `byIndex` in array and  `byName` in hashtable.\nvar ColumnSet = function(){\n  this.byIndex = [];\n  this.byName = {};\n};\n\n// get column either by name or by index\nColumnSet.prototype.getColumn = function(name_or_idx){\n  return (_.isNumber(name_or_idx) ? this.byIndex : this.byName )[name_or_idx];\n};\n\n// enforce column by name\nColumnSet.prototype.enforceColumn = function(name,n_rows,type){\n  var c = this.byName[name];\n  if( u$.isNullish(c) ){\n    c = new Column(name ,n_rows, type);\n    c.col_idx = this.byIndex.length;\n    this.byIndex.push(c);\n    this.byName[name] = c;\n  }\n  return c;\n};\n\n// enforce column by `col_idx`, `name` will be set to `'c'+col_idx`\nColumnSet.prototype.enforceColumnAt = function(col_idx,n_rows,type){\n  var c = this.byIndex[col_idx];\n  if( u$.isNullish(c) ){\n    var name = \"c\"+col_idx ;\n    c = new Column(name, n_rows, type);\n    c.col_idx = col_idx;\n    this.byIndex[col_idx] = c;\n    this.byName[name] = c;\n  }\n  return c;\n};\n\n// add bunch of columns, preallocate array for `n_rows`\nColumnSet.prototype.addColumns = function(cols,n_rows){\n  for(var i = 0 ; i < cols.length ; i++){\n    var name = cols[i], type ;\n    if(_.isPlainObject(cols[i])){\n      name = cols[i].name;\n      type = cols[i].type;\n    }\n    this.enforceColumn(name, n_rows, type);\n  }\n  return this;\n};\n\n// ## <section id='DataFrame'>Dataframe</section>\n//\n// **new Dataframe(rows,columns)**:\n//    - `rows` - array of rows. row could be array or object.\n//    - `columns` - array that contains column names or objects with `{name: \"colname\",type: \"number\"}`.\nvar DataFrame = function (rows, columns){\n  var obj = this;\n  if( _.isUndefined(obj) || obj.constructor !== DataFrame ){\n    return new DataFrame(rows,columns);\n  }\n  rows = rows || [];\n  this.columnSet = new ColumnSet().addColumns( columns||[],rows.length);\n  this.index = _.range(rows.length);\n  for (var row = 0; row < rows.length; row++) {\n    var row_data = rows[row];\n    if( _.isPlainObject(row_data) ){\n      var keys = Object.keys(row_data);\n      for (var k = 0; k < keys.length; k++) {\n        this.columnSet.enforceColumn(keys[k]).data[row] = row_data[keys[k]];\n      }\n    }else if( _.isArray(row_data) ){\n      for (var col_idx = 0; col_idx < row_data.length; col_idx++) {\n        this.columnSet.enforceColumnAt(col_idx).data[row] = row_data[col_idx];\n      }\n    }else{\n      throw { msg: \"row should be object or array and not:\"+row_data };\n    }\n  }\n  return obj;\n};\n\nfunction make_df_from_(array_of_rows, header) {\n  header = header || array_of_rows.shift();\n  return new DataFrame(array_of_rows, header);\n}\n\n// **parse_csv(str,header)**\n//\n// parse comma separated values (CSV) format  provided in string `str`.\n// `header` is array with column names, if omitted first line of  CSV  in `str` considered header .\n\nDataFrame.parse_csv = function (str, header) {\n  return make_df_from_(parse_csv_to_array_of_rows(str),header);\n};\n\nfunction parse_csv_to_array_of_rows (str){\n  var arr = [];\n  var quote = false;  // true means we're inside a quoted field\n\n  var row ,col ,c ;\n  for (row = col = c = 0; c < str.length; c++) {\n    var cc = str[c], nc = str[c+1];        // current character, next character\n    arr[row] = arr[row] || [];             // create a new row if necessary\n    arr[row][col] = arr[row][col] || '';   // create a new column (start with empty string) if necessary\n    if (cc === '\"' && quote && nc === '\"') { // if two quotes inside quoted field\n      arr[row][col] += cc; ++c;\n      continue; // add quote and skip next char\n    }\n    if (cc === '\"') { // if lone quote\n      quote = !quote; continue; // toggle quoted field\n    }\n    if (cc === ',' && !quote) { // if comma in the wild\n      ++col; continue; // start next cell\n    }\n    if (cc === '\\n' && !quote) { // if new line in the wild\n      ++row; col = 0; continue;  // move to next row\n    }\n    arr[row][col] += cc; // or add char to current cell\n  }\n  return arr;\n}\n\nfunction parse_dom_table_to_array_of_rows(dom_table) {\n  return [].map.call(dom_table.rows,function(row){\n    return [].map.call(row.cells, function(c){ return c.textContent; });\n  });\n}\n\n// **parse_dom_table(dom_table, header)**\n//\n// parse comma separated values (CSV) format  provided in string `dom_table`.\n// `header` is array with column names, if omitted first row in  table\n// considered header .\n\nDataFrame.parse_dom_table = function (dom_table, header) {\n  return make_df_from_(parse_dom_table_to_array_of_rows(dom_table),header);\n};\n\n// **getRow(row_num,result)**\n//\n// get data row out of DataFrame.\n//    - `row_num` - row number\n//    - `result` - object or array to be filled in. **@optional**\n//       if not provided empty object is assumed.\n\nDataFrame.prototype.getRow=function(row_num,result){\n  var ph_row = this.index[row_num] ;\n  result = result || {};\n  this.columnSet.byIndex.forEach( _.isArray(result) ?\n      function (c, col_idx) { result[col_idx] = c.data[ph_row]; } :\n      function (c)          { result[c.name] = c.data[ph_row]; });\n  return result;\n};\n// **get(row,col)**\n//\n// get one value out of DataFrame\n//   - `row_num` - row number\n//   - `col` - column index or column name\n//\nDataFrame.prototype.get=function(row_num,col){\n  var ph_row = this.index[row_num] ;\n  var c = this.columnSet.getColumn(col);\n  return c.data[ph_row];\n};\n// **set(row_num,col,v)**\n//\n// set value in one cell of DataFrame\n//   - `row_num` - row number\n//   - `col` - column index or column name\n//   - `v` -  value to set\nDataFrame.prototype.set=function(row_num,col, v){\n  var ph_row = this.index[row_num] ;\n  var c = this.columnSet.getColumn(col);\n  c.data[ph_row] = v;\n};\n// **getRowCount()**\n//\n// get row count\nDataFrame.prototype.getRowCount=function(){\n  return this.index.length;\n};\n//**newRow()**\n//\n//add new row. Returns new row number.\nDataFrame.prototype.newRow=function(){\n  var new_row_num=this.index.length;\n  this.index[new_row_num] = new_row_num;\n  return new_row_num;\n};\n//**deleteRow(row_num)**\n//\n//delete row by `row_num`.\nDataFrame.prototype.deleteRow=function(row_num){\n  this.index.splice(row_num,1);\n};\n// getColumn(col)\n//\n// get all data out column. returns array of values\n//   - `col` - column index or column name\nDataFrame.prototype.getColumn=function(col){\n  var c = this.columnSet.getColumn(col);\n  if(c){\n    return this.index.map(function(idx){\n      return c.data[idx];\n    });\n  }\n  return undefined;\n};\n// ** apply(logic) **\n//\n// run `logic(df,row_num)` function on all rows of DataFrame\n//\n//\nDataFrame.prototype.apply=function(logic){\n  for (var row_num = 0; row_num < this.index.length; row_num++) {\n    logic(this,row_num);\n  }\n};\n// ** map(logic) **\n//\n// run `logic(df,row_num)` function on all rows of DataFrame.\n// Collect results from each run into array. `undefined` results\n// will not be included in array.\n//\n//\nDataFrame.prototype.map=function(logic){\n  var collector = [], r;\n  for (var row_num = 0; row_num < this.index.length; row_num++) {\n    r = logic(this,row_num);\n    if( r !== undefined ){\n      collector.push(r);\n    }\n  }\n  return collector;\n};\n// **getData()**\n//\n// Get all data in structure:\n// returns {Object}\n//   - columns - columns array\n//     - name - column name\n//     - type - column type, if defined\n//   - rows - array of rows. each row array of values.\n//\n\nDataFrame.prototype.getData =function(){\n  var r = {columns:[],rows:[]};\n  var columns = this.columnSet.byIndex;\n  for(var col=0;col < columns.length; col++){\n    var column = columns[col];\n    var col_def = {name: column.name};\n    if(column.type){\n      col_def.type = column.type.name;\n    }\n    r.columns.push( col_def);\n  }\n  r.rows = this.map(function(df,row_num){\n    return df.getRow(row_num,[]);\n  });\n  return r;\n};\n\n// **getObjects()**\n//\n// returns all rows in  array , each row is object\n// with column names pointing to values\n//\n\nDataFrame.prototype.getObjects =function(){\n  return this.map(function(df,row_num){\n    return df.getRow(row_num);\n  });\n};\n\nmodule.exports = DataFrame;\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./wdf/DataFrame.js\n **/"],"sourceRoot":""}