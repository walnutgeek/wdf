{"version":3,"sources":["webpack:///webpack/bootstrap 41e2d77cf4902a146a20","webpack:///./index.js","webpack:///./wdf/utils.js","webpack:///./~/lodash/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./wdf/DataFrame.js"],"names":["module","exports","utils","require","DataFrame","pad_with","input","template","r","String","length","substr","pad_with_zeros","n","new_date","in_utc","components","Date","UTC","apply","u$","new_Object","parse_date","s","pkey","DATE_PATTERNS","m","regexp","exec","args","i","generic_order","a","b","Type","name","props","_","assign","this","mixin_type","mixin","type","undefined","defaults","order","missing","isNull","to_json","identity","coerce","value","from_type","is","findTypeByValue","property_to","hasOwnProperty","property_from","mixin_coerce","to_string","from_string","_to_string","ensureString","v","compare","orderNullsFirst","isUint32","isNumber","testFor","condition","predicates","assert","Array","prototype","call","f","isNullish","isUndefined","isPrimitive","isString","isBoolean","isFunction","isDate","isArrayEmpty","array","isArray","isStringEmpty","trim","isStringNotEmpty","numDefault","default_v","isNaN","brodcastCall","brodcastTo","funcName","vocal","forEach","castTo","error","message","obj","constructor","push","Function","bind","extractFunctionName","toString","match","getPropertyExtractor","property","o","combineKeyExtractors","extractors","extractArray","arguments","key","arg","slice","binarySearch","searchFor","comparator","mapper","mid","mapToValue","x","min","max","repeat","result","convertListToObject","extractor","k","convertFunctionsToObject","funcList","applyOnAll","action","join","collection","delimiter","toValue","keys","isTypedArray","Object","doDelimit","fromBegining","fromEnd","indexFromBegining","indexFromEnd","filterChars","filter","at","charAt","detectRepeatingChar","prefix_ch","ch","detectPrefix","prefix","params","err","Error","_message","isPlainObject","size","JSON","stringify","provided","expected","check","equals","some","YYYY_MM_DDThh_mm_ss_zzzZ","delims","YYYY_MM_DDThh_mm_ss_zzz","YYYY_MM_DD_hh_mm_ss_zzz","YYYY_MM_DDThh_mm_ss","YYYY_MM_DD_hh_mm_ss","YYYYMMDD_hhmmss","YYYYMMDDhhmmss","YYYY_MM_DD","YYYYMMDD","DATE_FIELD_SIZES","pattern_texts","map","p","RegExp","date_from_string","precision","strict","dt","getTime","d","date_components","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","utc_components","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","SUPPORTED_DATE_FORMATS","date_to_string_fn","format","components_fn","d_values","parseDateUTC","parseDate","relativeDateString","date","rel","Math","abs","floor","h","BiMap","inverse","_inverse","forward","get","val","put","del","values","Tokenizer","delimiters","isValueChar","indexOf","next","start","substring","getText","nextValue","nextDelimiter","getPosition","setPosition","_i","splitUrlPath","urlpath","path","split","last","variables","vars","sep","encodeURI","part","item","decodeURIComponent","orderChain","funcs","rc","res","orderPredicateFirst","indexOrder","valueOrder","valueArray","extractValuesByIndex","indexArray","idx","createIndex","range","orderInverse","splice","types","init","to","from","addTypes","typesMap","typeName","NANs","BOOLEAN_STRINGS","MILLS_IN_DAY","MILLS_IN_SEC","date_mixin","pattern","from_number","to_number","NaN","number","datetime","timestamp","boolean","toLowerCase","string","detect_possible_array_types","str_array","options","hasMissing","eligible_types","row","opt","parsed","choose_column_type","ops","ensureType","typeOrName","baseCompareAscending","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","chars","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","data","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","hash","nativeCreate","set","Set","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","baseAssign","baseCopy","baseAt","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","baseMatches","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","baseGet","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","thru","getFuncName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","nativeCeil","createPartialWrapper","createRound","methodName","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","replace","rePropName","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","find","includes","pluck","reject","sample","toArray","rand","shuffle","sortBy","sortByOrder","where","after","temp","before","debounce","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","id","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isElement","nodeType","isEmpty","isEqual","isError","isFinite","isMatch","reIsNative","fnToString","reIsHostCtor","isRegExp","typedArrayTags","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","nativeParseInt","reHasHexPrefix","startsWith","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","global","unescape","reHasEscapedHtml","reEscapedHtml","reWords","matches","constant","matchesProperty","isObj","methodNames","noConflict","oldDash","noop","propertyOf","step","times","MAX_ARRAY_LENGTH","uniqueId","idCounter","augend","addend","sum","pick","contextProps","Number","arrayProto","objectProto","stringProto","WeakMap","ceil","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","countBy","findLast","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","kebabCase","padLeft","padRight","snakeCase","startCase","e","method","methodOf","round","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","c","t","u","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","moduleExports","amd","webpackPolyfill","deprecate","paths","children","make_df_from_","array_of_rows","config","columns","shift","parse_csv_to_array_of_rows","str","col","arr","cc","nc","parse_dom_table_to_array_of_rows","dom_table","rows","dom_row","cells","textContent","Column","len","setType","coerceData","detectData","option","if_coerce","coerce_from","as_json","as_string","ColumnSet","byIndex","byName","getColumn","name_or_idx","enforceColumn","n_rows","col_idx","enforceColumnAt","addColumns","cols","columnSet","row_data","msg","to_csv","getRowCount","parse_csv","parse_wdf","parse","to_wdf","getConfig","getJsonRow","detectColumnTypes","list_of_columns","getColumnNames","parse_dom_table","getObjectRow","row_num","ph_row","getArrayRow","newRow","new_row_num","deleteRow","logic","collector","column","col_def","setColumnType","new_type","getObjects"],"mappings":"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","file":"wdf.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 41e2d77cf4902a146a20\n **/","module.exports = {\n  utils: require(\"./wdf/utils\"),\n  DataFrame: require(\"./wdf/DataFrame\"),\n};\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","//  misc utilities. Initialize it like:\n//  ```\n//    var u$ = requre(\"wdf/utils\");\n//  ```\n\n(function() {\n  \"use strict\";\n  var u$ = module.exports = {} ;\n  var _ = require(\"lodash\");\n\n//\n// ## Detect Types\n\n\n// **isUint32(o)**\n//\n// `true` if `o` is whole number\n  u$.isUint32=function(a) {\n    return _.isNumber(a) && a >= 0 && a <= 0xFFFFFFFF && a % 1 === 0 ;\n  };\n\n// ** testFor(a,condition,predicates) **\n//\n//  * `a` - to test\n//  * `condition` - `'some'` or `'every'`\n//  *\n  u$.testFor = function (a,condition,predicates){\n    u$.assert(condition,['some','every']);\n    return Array.prototype[condition].call(predicates,\n        function(f){return f(a);});\n  };\n\n// **isNullish(o)**\n//\n// `true` if `o` is boolean\n  u$.isNullish=function(a) {\n    return _.isNull(a) || _.isUndefined(a);\n  };\n\n\n// **isPrimitive(a)**\n//\n// returns `true` if `a` is build-in non composite type\n  u$.isPrimitive=function(a) {\n    return _.isString(a) || _.isNumber(a) || _.isBoolean(a) ||\n        _.isFunction(a) || _.isDate(a);\n  };\n\n\n// **isArrayEmpty(array)**\n//\n// returns `true` if `array` is nullish or empty\n  u$.isArrayEmpty=function(array){\n    return u$.isNullish(array) || (_.isArray(array) && array.length === 0);\n  };\n\n\n// **isStringEmpty(s)**\n//\n// returns `true` if `s` is nullish or empty string\n  u$.isStringEmpty=function(s){\n    return u$.isNullish(s) || ( _.isString(s) && s.trim().length === 0);\n  };\n\n// **isStringNotEmpty(s)**\n//\n// returns `true` if `s` contains some non-whitespace charcters\n  u$.isStringNotEmpty=function(s){\n    return _.isString(s) &&  s.trim().length > 0;\n  };\n\n\n\n// **numDefault(v,default_v)**\n//\n// returns `default_v` if `v` is Nullish or NaN, otherwise returns `v`\n  u$.numDefault=function(v,default_v){\n    if(u$.isNullish(v) || isNaN(v)){\n      return default_v;\n    }\n    return v;\n  };\n\n\n// ## Function Utils\n\n//**brodcastCall(brodcastTo, funcName, args, vocal)**\n//\n// call method with `funcName` on each object from `brodcastTo`\n// array. `args` passed for each of these calls. `vocal` - optional\n// controls error throwing behavior, default or false be silent -\n// do not throw exceptions.\n  u$.brodcastCall=function(brodcastTo, funcName, args, vocal){\n    vocal = vocal || false;\n    if(! u$.isArrayEmpty(brodcastTo) ){\n      brodcastTo.forEach(\n          function(castTo){\n            var f = castTo[funcName];\n            if( _.isFunction(f) ){\n              f.apply(castTo,args);\n            }else if( vocal ){\n              throw u$.error({message: \"No such function\", funcName: funcName, obj: castTo });\n            }\n          }\n      );\n    }\n  };\n\n\n//** new_Object(constructor, args) **\n//\n// Call `constructor` passing variable number of `args` as  array\n\n  u$.new_Object = function(constructor, args) {\n    var a = [null];\n    Array.prototype.push.apply(a,args);\n    return new (Function.prototype.bind.apply(constructor, a))();\n  };\n\n\n// ** extractFunctionName(f) **\n//\n// extract function name. Does not work for lambas:\n//\n//  ```\n//  > function abc(){}\n//  > u$.extractFunctionName(abc);\n//   \"abc\"\n//  > var xyz = function(){}\n//  > u$.extractFunctionName(xyz)\n//   \"\"\n//  >\n//  ```\n  u$.extractFunctionName=function(f) { // because IE does not support Function.prototype.name property\n    var m = f.toString().match(/^\\s*function\\s*([^\\s(]+)/);\n    return m ? m[1] : \"\";\n  };\n\n\n// ** getPropertyExtractor(property)**\n//\n// create extractor function that extract property out of object by name:\n//\n//  ```\n//  > var len = u$.getPropertyExtractor(\"length\") ;\n//  > len([0,2,4])\n//   3\n//  >\n//  ```\n  u$.getPropertyExtractor=function(property) {\n    return function(o) {\n      return o[property];\n    };\n  };\n\n\n// ** combineKeyExtractors(...extractors)**\n//\n// create function that call extractror functions one by one\n// and first `value !== undefined` get returned:\n//\n//  ```\n//  > var len = u$.combineKeyExtractors(['len','size']\n//                     .map(u$.getPropertyExtractor)) ;\n//  > len({size: 3})\n//   3\n//  > len({len: 5})\n//   4\n//  > len({a: 5})\n//   undefined\n//  >\n//  ```\n  u$.combineKeyExtractors=function() {\n    var extractors = u$.extractArray(arguments);\n    return function(o) {\n      for ( var i = 0; i < extractors.length; i++) {\n        var key = extractors[i](o);\n        if(key !== undefined){\n          return key;\n        }\n      }\n      return undefined;\n    };\n  };\n\n\n//## Collections utils\n\n// ** extractArray(args) **\n//\n// Take arguments object and convert it to array.\n// Useful if you want to consume all arguments of\n// function as elements of one array, yet you want to allow\n// possibility to pass all of them in one argument as\n// array as well.\n//\n// ```\n//  > function x(){\n//  ...     var args = u$.extractArray(arguments);\n//  ...     console.log(args);\n//  ...  }\n//  > x(\"a\",\"b\");\n//   [\"a\", \"b\"]\n//  > var arr=[\"z\",\"y\"];\n//  > x(arr);\n//   [\"z\", \"y\"]\n// ```\n  u$.extractArray=function(args) {\n    if ( !args || args.length === 0) {\n      return [];\n    } else if (args.length === 1) {\n      var arg = args[0];\n      if (_.isArray(arg)) {\n        return arg;\n      }\n    }\n    return Array.prototype.slice.call(args);\n  };\n\n\n// **binarySearch(searchFor, array, comparator, mapper)  **\n//\n// search sorted `array` and return index of element that match\n// `searchFor`. If index positive it points on exact matched\n// element. If negative - no match found, and value of `1 - negative_index`\n// will point to where such element should be located in `array`.  `mapper(array_elem)`\n// allow for optional level of indirection, and map value from `array`\n// to object that will be compared with `searchFor`. `comparator(a,b)` is logic\n// that compare objects. It is a order function that roughly does\n// something like: `a < b ? -1 : a > b ? 1 : 0`\n//\n// ```\n//  > var array = [ 1, 2, 4, 6, 8, 10, 25 ];\n//  > u$.binarySearch(4, array, t$.number.compare);\n//   2\n//  > u$.binarySearch(7, array, t$.number.compare);\n//   -5\n// ```\n  u$.binarySearch=function(searchFor, array, comparator, mapper) {\n    var mapToValue = mapper || function(x) {\n          return x;\n        };\n    var min = 0;\n    var max = array.length - 1;\n    var mid, r;\n    while (min <= max) {\n      mid = ((min + max) / 2) | 0;\n      r = comparator(searchFor, mapToValue(array[mid]));\n      if (r > 0) {\n        min = mid + 1;\n      } else if (r < 0) {\n        max = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -1 - min;\n  };\n\n\n//**repeat(n,value)**\n//\n// repeats `value` in array `n` times.  If `value` is function\n// result of `value(i)` call will be stored in array instead.\n\n  u$.repeat=function(n, value) {\n    var result = [];\n    for ( var i = 0; i < n; i++) {\n      result.push(_.isFunction(value) ? value(i) : value);\n    }\n    return result;\n  };\n\n//**convertListToObject(array,extractor) **\n//\n// converts array to object.  `extractor(v)` retrieve key  from each\n// element of array. If key is defined key-value pair will be stored\n// in object.\n  u$.convertListToObject=function(array,extractor) {\n    var obj = {};\n    for ( var i = 0; i < array.length; i++) {\n      var v = array[i];\n      var k = extractor(v);\n      if( k !== undefined ){\n        obj[k] = v;\n      }\n    }\n    return obj;\n  };\n\n\n//** convertFunctionsToObject(funcList)**\n//\n// Extract name of functions and use them as keys to reshape `funcList` array\n// to object.\n  u$.convertFunctionsToObject=function(funcList) {\n    return u$.convertListToObject(funcList,\n        u$.combineKeyExtractors(\n            u$.getPropertyExtractor(\"name\"),\n            u$.extractFunctionName));\n  };\n\n\n//** applyOnAll(obj, action) **\n//\n// apply `action(v,k,obj)` on all elements of `obj`\n// object\n  u$.applyOnAll=function(obj, action) {\n    for ( var k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        action(obj[k], k, obj);\n      }\n    }\n  };\n\n\n\n//** join(collection, delimiter, toValue)**\n//\n// join elements of `collection`\n//   * `collection` - array or object.\n//   * `delimiter` - delimiter value or function. if omitted `','`\n//     is assumed. When value provided same delimiter will be inserted\n//     in between elements of collection. With function\n//     `delimiter(collection, fromBegining, fromEnd)` you can control\n//     delimiters for each position separately including before first\n//     and after last element. Before and after delimiters set to empty\n//     string by default.\n//   * `toValue` - optional, by default identity function. transform\n//     elements before join.\n  u$.join=function(collection, delimiter, toValue) {\n    var keys = _.isArray(collection)  || _.isTypedArray(collection)  ?\n        collection : Object.keys(collection) ;\n    if (!toValue) {\n      toValue = function (s) {\n        return s;\n      };\n    }\n    if (u$.isNullish(delimiter) ) {\n      delimiter = ',';\n    }\n    var doDelimit = delimiter;\n    if (!_.isFunction(delimiter)) {\n      doDelimit = function (collection, fromBegining, fromEnd) {\n        return (fromBegining < 0 || fromEnd < 0) ? '' : delimiter;\n      };\n    }\n    var indexFromBegining = -1; // -1 means delimiter before of first element\n    var indexFromEnd = keys.length-1; //it become -1 for delimiter after of last element\n    var result = '';\n    while (indexFromBegining < keys.length) {\n      if (indexFromBegining >= 0) {\n        result += toValue(keys[indexFromBegining], collection);\n      }\n      result += doDelimit(keys, indexFromBegining, indexFromEnd, collection);\n      indexFromBegining++;\n      indexFromEnd--;\n    }\n    return result;\n  };\n\n\n// ## Misc\n\n//** filterChars(s,filter) **\n//\n// starting from beginning filter all characters\n// that meet `filter(char(string),index(int),whole_string(string))->boolean`\n// function requirements.\n//\n// Returns position where criteria no longer met.\n  u$.filterChars=function(s,filter){\n    var at = 0 ;\n    while( at < s.length && filter(s.charAt(at),at,s) ) {\n      at++;\n    }\n    return at;\n  };\n\n\n//** detectRepeatingChar(s,prefix_ch) **\n//\n// detect repeating char `prefix_ch` in beginning of the line `s`\n  u$.detectRepeatingChar=function(s,prefix_ch){\n    return u$.filterChars(s,function (ch){\n      return ch === prefix_ch;\n    });\n  };\n\n//** detectPrefix ( s, prefix ) **\n//\n// checks if `s` starts with `prefix`. Essentially this is the\n// same as `String.prototype.startWith(prefix)` but ES6 not quite here yet.\n  u$.detectPrefix=function(s,prefix){\n    return prefix.length === u$.filterChars(s,function (ch,at){\n          return ch === prefix.charAt(at);\n        });\n  };\n\n\n//** ensureString ( a ) **\n//\n// ensure String object\n\n  u$.ensureString=function(a) {\n    return u$.isNullish(a) ? \"\" : _.isString(a) ? a : String(a);\n  };\n\n\n//**error(params,err)**\n//\n//creates error object or add params to it as it will fly by.\n  u$.error=function(params,  err) {\n    err = err || new Error();\n    params = params || {};\n    if ( u$.isNullish(err._message) ) {\n      err._message  = err.message ? err.message :  params.message || '' ;\n      delete params.message;\n    }\n    if ( _.isPlainObject(err.params) ) {\n      _.assign(err.params, params);\n    }else{\n      err.params = params;\n    }\n    err.toString = function (){\n      var m =  err._message ;\n      return _.size(this.params)  ? m + \" \" + JSON.stringify(this.params) : m;\n    };\n    return err;\n  };\n//** assert(provided, expected, message) **\n//\n// throws error if `provided` and `expected` are not equal.\n  u$.assert=function(provided, expected, message) {\n    function check(expected) {\n      return provided === expected;\n    }\n    var equals = _.isArray(expected) ? expected.some(check) : check(expected) ;\n    if ( !equals ) {\n      throw u$.error({\n        message : message || \"Unexpected value\",\n        expected : expected,\n        provided : provided,\n      });\n    }\n  };\n\n//## Parsing dates\n\n//### some private date related stuff\n\n// pad_with(input,template)\n//\n// pad `input` value according to `template`\n\n// ```\n//  > pad_with(5,'00')\n//   '05'\n//  > pad_with(5,'0000')\n//   '0005'\n// ```\n  function pad_with(input, template) {\n    var r = String(input);\n    if (r.length !== template.length) {\n      r = (template + r).substr(r.length, template.length);\n    }\n    return r;\n  }\n\n// pad_with_zeros(input,n)\n//\n// pad `input` with zeros until it reach `n` size\n//\n// ```\n//  > pad_with_zeros(5,2)\n//   '05'\n//  > pad_with_zeros(5,4)\n//   '0005'\n// ```\n  function pad_with_zeros(input, n) {\n    var r = String(input);\n    while(r.length < n) {\n      r = '0' + r;\n    }\n    return r;\n  }\n\n// define supported date patterns\n  var DATE_PATTERNS = {\n    YYYY_MM_DDThh_mm_ss_zzzZ: { delims: ['-','-','T',':',':','.','Z'] }, //ISO-8601\n    YYYY_MM_DDThh_mm_ss_zzz:  { delims: ['-','-','T',':',':','.'] },\n    YYYY_MM_DD_hh_mm_ss_zzz:  { delims: ['-','-',' ',':',':','.'] },\n    YYYY_MM_DDThh_mm_ss:      { delims: ['-','-','T',':',':'] },\n    YYYY_MM_DD_hh_mm_ss:      { delims: ['-','-',' ',':',':'] },\n    YYYYMMDD_hhmmss:          { delims: ['','','-','',''] },\n    YYYYMMDDhhmmss:           { delims: ['','','','',''] },\n    YYYY_MM_DD:               { delims: ['-','-'] },\n    YYYYMMDD:                 { delims: ['',''] },\n  };\n\n//prepare text for regexp\n  var DATE_FIELD_SIZES = [4,2,2,2,2,2,3];\n  var pattern_texts = DATE_FIELD_SIZES.map(function(n){\n    var s='(';\n    while(n--){\n      s+='\\\\d';\n    }\n    return s+')';\n  });\n\n// generate regexps in `DATE_PATTERNS`\n  for(var name in DATE_PATTERNS){\n    var o = DATE_PATTERNS[name];\n    var n = o.delims.length+1;\n    var s = '^';\n    for (var i = 0; i < n; i++) {\n      if(i>0){\n        s += o.delims[i-1];\n      }\n      var p = pattern_texts[i];\n      if( p )\n        s += p;\n    }\n    s+='$';\n    o.regexp=new RegExp(s);\n  }\n\n// build date out of components\n  function new_date(in_utc,components){\n    if (in_utc){\n      return new Date(Date.UTC.apply(null,components));\n    }else{\n      return u$.new_Object(Date, components);\n    }\n  }\n\n// try all patters to parse string\n  function parse_date(in_utc, s){\n    for(var pkey in DATE_PATTERNS){\n      var m = DATE_PATTERNS[pkey].regexp.exec(s);\n      if(m){\n        var args = [];\n        for(var i = 1 ; i < m.length ;i++){\n          args[i-1] = +m[i] ;\n        }\n        args[1]--;\n        return new_date(in_utc, args);\n      }\n    }\n    return undefined;\n  }\n\n//### Public Date stuff\n\n\n\n//** date_from_string(s)**\n//\n// parse string into date assuming UTC timezone\n//   * `s` -\n//   * `precision` -  date precision in mills\n//   * `strict` - if true, dates that does not\n//      exactly match precision will be undefined\n\n  u$.date_from_string=function(s,precision,strict){\n    precision = precision || 1;\n    var dt = parse_date(true, s);\n    if( _.isDate(dt) ){\n      var v = dt.getTime();\n      var d = v % precision ;\n      if ( d === 0 ) {\n        return dt;\n      }else if( !strict ){\n        return new Date(v-d);\n      }\n    }\n    return undefined;\n  };\n\n\n//**date_components(d)**\n//\n// split Date object into array of components :\n// [year, month(1-12), day, hours, minutes, seconds]\n// in local time\n  u$.date_components=function(d){\n    return [d.getFullYear(),d.getMonth() + 1,d.getDate(),\n      d.getHours(),d.getMinutes(),d.getSeconds(),d.getMilliseconds()];\n  };\n\n//**utc_components(d)**\n//\n// split Date object into array of components :\n// [year, month(1-12), day, hours, minutes, seconds]\n// in UTC time\n  u$.utc_components=function(d){\n    return [d.getUTCFullYear(),d.getUTCMonth() + 1,d.getUTCDate(),\n      d.getUTCHours(),d.getUTCMinutes(),d.getUTCSeconds(),d.getUTCMilliseconds()];\n  };\n\n//**SUPPORTED_DATE_FORMATS**\n// array of supprted  date formats names\n\n// ```\n// > SUPPORTED_DATE_FORMATS\n// [\"YYYY_MM_DDThh_mm_ss\", \"YYYY_MM_DD_hh_mm_ss\", \"YYYYMMDD_hhmmss\",\n//  \"YYYYMMDDhhmmss\", \"YYYY_MM_DD\", \"YYYYMMDD\"]\n// ```\n  u$.SUPPORTED_DATE_FORMATS = Object.keys(DATE_PATTERNS);\n\n\n//**date_to_string_fn(format,components_fn)**\n//\n// create function that will convert Date object into string.\n//   * `format` - format name. See SUPPORTED_DATE_FORMATS above.\n//   * `components_fn` - (optional) one of 2 functions that to split date\n//     into components `utc_components` (default) and `date_components` .\n\n  u$.date_to_string_fn=function(format,components_fn){\n    components_fn = components_fn || u$.utc_components;\n    var delims = DATE_PATTERNS[format].delims ;\n    return function(d){\n      var d_values = components_fn(d);\n      var n = delims.length+1;\n      var s = '';\n      for (var i = 0; i < n; i++) {\n        if(i > 0){\n          s += delims[i-1];\n        }\n        if( i < d_values.length ){\n          s += pad_with_zeros(d_values[i],DATE_FIELD_SIZES[i]);\n        }\n      }\n      return s;\n    };\n  };\n\n//** parseDateUTC(s) **\n//\n// parse date using on of `SUPPORTED_DATE_FORMATS`\n// assuming UTC timezone\n\n  u$.parseDateUTC=function(s){\n    return parse_date(true,s);\n  };\n\n//** parseDate(s) **\n//\n// parse date using on of `SUPPORTED_DATE_FORMATS`\n// assuming local timezone\n\n  u$.parseDate=function(s){\n    return parse_date(false,s);\n  };\n//** relativeDateString(date,rel) **\n//\n// produce string representation of UTC time in format\n//   * `+-hh:mm` if diffirence between `date` and `rel`\n//     less then 24 hours\n//   * `YYYY-MM-DD hh:mm` otherwise\n// ```\n// > relativeDateString(new Date(d.getTime()+120000),d)\n//  \"+00:02\"\n// > relativeDateString(new Date(d.getTime()-120000),d)\n//  \"-00:02\"\n// > relativeDateString(new Date(d.getTime()-1200000000),d)\n//  \"2015-10-22 08:34\"\n// ```\n  u$.relativeDateString=function(date,rel) {\n    if(!_.isDate(date)){\n      if(!u$.isNullish(date)){\n        date = u$.parseDateUTC(date);\n      }else{\n        return \"\";\n      }\n    }\n    if(!_.isDate(rel)){\n      rel = new Date();\n    }\n    if( Math.abs(date.getTime() - rel.getTime()) < 86400000 ){\n      var a = Math.floor( (date.getTime() - rel.getTime())  / 1000);\n      var s = Math.abs(a) + 30;\n      var m = Math.floor( s / 60 );\n      var h = Math.floor( m / 60 );\n      s = s % 60;\n      m = m % 60;\n      return (a < 0 ? '-' : '+') + pad_with(h, '00') + ':' + pad_with(m, '00')  ;\n    }\n    return date.getUTCFullYear() + '-' +\n        pad_with(date.getUTCMonth() + 1, '00') + '-' +\n        pad_with(date.getUTCDate(), '00') + ' ' +\n        pad_with(date.getUTCHours(), '00') + ':' +\n        pad_with(date.getUTCMinutes(), '00') ;\n\n  };\n\n// ## Bi-directional map\n\n// ** BiMap(map) **\n//\n// class that allow to maintain forward reference from key to value,\n// as well inverse as from value to key. If values are not unique,\n// it will be mapped to only one of the keys. Changes to `BiMap`\n// will be reflected in underlying `map` object as well. It is better\n// to use strings both as keys and values, because object keys casted\n// to strings, and we use values as keys in inverse mapping too.\n// ```\n// > var o = {}\n// > var bm = u$.BiMap(o)\n// > bm.put(5,3)\n// > bm.key(3)\n//  \"5\"\n// > bm.get(5)\n//  3\n// > bm.values()\n//  [\"3\"]\n// > bm.keys()\n//  [\"5\"]\n// > bm.put(\"x\",\"3\")\n// > bm.keys()\n//  [\"5\", \"x\"]\n// > bm.values()\n//  [\"3\"]\n// > bm.key(3)\n//  \"x\"\n// > bm.del(\"x\")\n// > bm.key(3)\n//  \"5\"\n// ```\n  u$.BiMap=function(map) {\n    if( ! (this instanceof u$.BiMap) ){\n      return new u$.BiMap(map);\n    }\n    var forward = map || {};\n    var _inverse = null;\n    function inverse(){\n      if( _inverse === null ){\n        _inverse = {};\n        for ( var key in forward) {\n          if (forward.hasOwnProperty(key)) {\n            _inverse[forward[key]]=key;\n          }\n        }\n      }\n      return _inverse;\n    }\n    //`get(key)` - get value by key\n    this.get =    function(key) { return forward[key]; };\n    //`key(val)` - get key by value\n    this.key =    function(val) { return inverse()[val]; };\n    //`put(key,val)` - store key-value pair\n    this.put =    function(key,val) { forward[key] = val; _inverse = null; };\n    //`del(key)` - delete key-value pair by key\n    this.del =    function(key) { delete forward[key];_inverse = null; };\n    //`keys()` - get all keys\n    this.keys =   function() { return Object.keys(forward); };\n    //`values()` - get all distinct values\n    this.values = function() { return Object.keys(inverse()); };\n  };\n\n// ## Stuff should be thrown away but I am reactant for  some reason\n\n// Tokenizer\n  u$.Tokenizer=function(s, delimiters) {\n    var i = 0;\n\n    function isValueChar() {\n      return delimiters.indexOf(s.charAt(i)) < 0;\n    }\n\n    function next(condition) {\n      var start = i;\n      while (i < s.length && condition()){\n        i++;\n      }\n      return s.substring(start, i);\n    }\n\n    return {\n      getText : function() {\n        return s;\n      },\n      nextValue : function() {\n        return next(isValueChar);\n      },\n      nextDelimiter : function() {\n        return next(function() {\n          return !isValueChar();\n        });\n      },\n      toString : function() {\n        return s.substring(0, i) + \" <-i-> \" + s.substring(i);\n      },\n      getPosition : function() {\n        return i;\n      },\n      setPosition : function(_i) {\n        i = _i;\n      }\n    };\n  };\n\n//** splitUrlPath(urlpath) **\n//\n// spit url path on path elements, and variables.\n//\n  u$.splitUrlPath=function(urlpath) {\n    var path = urlpath.split(\"/\");\n    var last = path[path.length-1].split('?');\n    var result = {\n      path: path ,\n      variables: {},\n      toString: function(){\n        var vars = '' ;\n        var sep = '?' ;\n        for ( var k in this.variables) {\n          if (this.variables.hasOwnProperty(k)) {\n            vars += sep + k + '=' + encodeURI(this.variables[k]);\n            sep = '&';\n          }\n        }\n        return this.path.join('/') + vars;\n      }\n    };\n    if( last.length === 2 ){\n      path[path.length-1] = last[0];\n      last[1].split(\"&\").forEach(function(part) {\n        var item = part.split(\"=\");\n        if( item[0].length > 0 ){\n          result.variables[item[0]] = decodeURIComponent(item[1]);\n        }\n      });\n    }else if(last.length > 2){\n      throw 'Unexpected number of \"?\" in url :' + urlpath ;\n    }\n    return result;\n  };\n\n// order functions take two arguments (let's say `a` and `b`)\n// and compare them.\n//\n// Returns:\n//   * `-1` if `a` less then `b`\n//   * `1` if `a` greater then `b`\n//   * `null` if `a` equals `b`  but you want next\n//     order function in chain have it's say\n//   * `0` if `a` equals `b` period.\n//\n// here is generic order function\n  function generic_order(a,b){\n    return a === b ? null : a < b ? -1 : 1 ;\n  }\n\n\n// ** orderChain(array) **\n//\n// Create chain of order functions.\n  u$.orderChain = function(){\n    var funcs = u$.extractArray(arguments);\n    return function(a,b){\n      var rc = 0;\n      for (var i = 0; i < funcs.length; i++) {\n        var res = funcs[i](a,b);\n        if( res !== null ){\n          rc = res;\n          break;\n        }\n      }\n      return rc;\n    };\n  };\n\n// **orderPredicateFirst(is)**\n//\n// Turn predicate function(returning `true` or `false`) into\n// order function. Order function place `true` first.\n  u$.orderPredicateFirst = function (is) {\n    return function(a, b) {\n      return is(a) ? (is(b) ? 0 : -1) : (is(b) ? 1 : null);\n    };\n  };\n\n// Assume we have `indexArray` and `valueArray`. We also have `valueOrder(a,b)`\n// function that capable of comparing elements of `valueArray`. `indexArray`\n// contains integers pointing to `valueArray`. That set up allow messing with\n// order or composition of `indexArray` leave order of `valueArray` unchanged.\n\n// **indexOrder (valueOrder, valueArray)**\n//\n// creates index order function for given `valueOrder(a,b)`\n\n  u$.indexOrder = function (valueOrder, valueArray) {\n    return function(a, b) {\n      return valueOrder(valueArray[a],valueArray[b]);\n    };\n  };\n\n// ** extractValuesByIndex (indexArray, valueArray)**\n//\n// extract values out of `valueArray` using `indexArray`\n  u$.extractValuesByIndex = function (indexArray, valueArray) {\n    return indexArray.map(function(idx){return valueArray[idx];});\n  };\n\n// ** createIndex(valueArray) **\n//\n// returns index array matching `valueArray`\n  u$.createIndex = function (valueArray) {\n    return _.range(valueArray.length);\n  };\n// **orderInverse(f)**\n//\n// inverse order mandated by `f(a,b)`\n  u$.orderInverse = function(f) {\n    return function(a, b) {\n      return f(b, a);\n    };\n  };\n\n  function build_to_string_fn(_to_string){\n    return function (v){\n      return u$.isNullish(v) ? \"\" : _to_string(v) ;\n    };\n  }\n\n//** orderNullsFirst(orderFuncArray) **\n//\n// Create order function that sort `undefined` - first, `null` - second\n// and then according to order functions provided in argument.\n  u$.orderNullsFirst = function(){\n    var funcs = u$.extractArray(arguments);\n    funcs.splice(0,0,u$.orderPredicateFirst(_.isUndefined));\n    funcs.splice(1,0,u$.orderPredicateFirst(_.isNull));\n    return u$.orderChain(funcs);\n  };\n\n  u$.types = {} ;\n\n  function Type(name, props) {\n    _.assign(this,props);\n    this.mixin_type = function(){\n      return this.mixin ? this.mixin.type : undefined;\n    };\n    var mixin = this.mixin_type();\n    if(mixin){\n      _.defaults(this,mixin);\n    }\n    this.name = name ;\n    _.defaults(this, {\n        order:      generic_order,\n        missing:    _.isNull,\n        to_json:    _.identity,\n        coerce:     function(value,from_type){\n          if(this.is(value)){\n            return value;\n          }\n          from_type = from_type || u$.findTypeByValue(value);\n          var property_to = \"to_\" + this.name;\n          if( from_type.hasOwnProperty(property_to) ){\n            return from_type[property_to](value);\n          }\n\n          var property_from = \"from_\" + from_type.name;\n          if( this.hasOwnProperty(property_from) ){\n            return this[property_from](value);\n          }\n          var mixin = this.mixin_type();\n          if( mixin && mixin === from_type.mixin_type() ){\n            return this.mixin_coerce(value,from_type);\n          }\n          var s = from_type.to_string(value);\n          return this.from_string(s);\n        },\n        _to_string: u$.ensureString,\n        to_string: function (v){\n          return _.isNull(v) ? \"\" : this._to_string(v);\n        }\n    });\n    this.compare = u$.orderNullsFirst(this.order);\n  }\n\n  // reevaluate type conversion graph.\n  // called everytime when `addTypes()` called.\n  Type.prototype.init=function(){\n    this.to = {};\n    this.from = {};\n\n  };\n  u$.Type = Type;\n\n// ** addTypes(typesMap) **\n//\n//    add types\n  u$.addTypes=function(typesMap){\n    for(var typeName in typesMap){\n      if( typesMap.hasOwnProperty(typeName) ){\n        u$.types[typeName] = new Type(typeName,typesMap[typeName]);\n      }\n    }\n    for(typeName in u$.types){\n      if( u$.types.hasOwnProperty(typeName) ){\n        u$.types[typeName].init();\n      }\n    }\n  };\n\n  var NANs = [null,\"\",\"NaN\",\"null\"];\n\n  var BOOLEAN_STRINGS = [\n    \"0\",\"1\",\"n\",\"y\",\"f\",\"t\",\n    \"no\",\"yes\",\"false\",\"true\"];\n\n  var MILLS_IN_DAY = 24 * 60 * 60 * 1000;\n  var MILLS_IN_SEC = 1000;\n\n  var date_mixin = {\n    is: function(v){\n      return _.isDate(v) && (v.getTime() % this.mixin.precision) === 0 ;\n    },\n    from_string: function (v,strict) {\n      return u$.isNullish(v) || v === '' ? null : u$.date_from_string(v,this.mixin.precision,strict);\n    },\n    _to_string: function(dt){\n      return u$.date_to_string_fn(this.mixin.pattern)(dt);\n    },\n    from_number: function (v) {\n      return isNaN(v) || u$.isNullish(v) ? null : new Date( v - v % this.mixin.precision);\n    },\n    to_number: function(dt){\n      return u$.isNullish(dt) ? NaN : dt.getTime();\n    },\n    order: function (a, b) {\n      return generic_order( a.getTime(), b.getTime());\n    },\n    mixin_coerce: function(value,from_type){\n      return this.from_number(from_type.to_number(value));\n    },\n    to_json: function(v){\n      return _.isNull(v) ? null : this.to_string(v);\n    },\n  };\n\n  u$.addTypes({\n// ** number ** type\n    number: {\n      is: _.isNumber,\n      missing: isNaN,\n      from_string: function(v){\n        return NANs.indexOf(v) > -1 ? NaN :  u$.numDefault(+v,undefined);\n      },\n      _to_string: function(v){\n        return isNaN(v)? '' : String(v);\n      },\n    },\n// ** date ** type\n    date: {\n      mixin: {\n        type: date_mixin,\n        precision: MILLS_IN_DAY,\n        pattern: \"YYYY_MM_DD\"\n      }\n    },\n// ** datetime ** type\n    datetime: {\n      mixin:{\n        type: date_mixin,\n        precision: MILLS_IN_SEC,\n        pattern: \"YYYY_MM_DD_hh_mm_ss\"\n      }\n    },\n// ** timestamp ** type\n    timestamp: {\n      mixin:{\n        type: date_mixin,\n        precision: 1,\n        pattern: \"YYYY_MM_DD_hh_mm_ss_zzz\"\n      }\n    },\n// ** boolean ** type\n    boolean: {\n      is: _.isBoolean,\n      from_string: function(v,strict){\n        if(_.isNull(v) || ''===v){\n          return null;\n        }\n        if(_.isString(v)) {\n          var idx = BOOLEAN_STRINGS.indexOf(v.toLowerCase());\n          if (idx >= 0) {\n            return idx % 2 === 1;\n          }\n        }\n        if(!strict){\n          var n = +v;\n          if( !isNaN(n) ) {\n            return Math.abs(n) > 1e-8;\n          }\n        }\n        return undefined;\n      },\n      to_number: function(b){\n        return u$.isNullish(b) ? NaN : +b;\n      },\n      order: function(a, b) {\n        return a ? (b ? null : 1) : (b ? -1 : null);\n      }\n    },\n// ** string ** type\n    string: {\n      is: _.isString,\n      missing: function(s) { return u$.isNullish(s) || s === '' ; },\n      from_string: function(v){\n        return \"\" === v ? null : v ;\n      }\n    },\n  });\n\n// ** detect_possible_array_types(str_array) **\n//\n// takes `str_array` and detect other possible array\n// types from values\n\n  u$.detect_possible_array_types=function(str_array){\n    var options={\n      string: { array: str_array, hasMissing: false , type: u$.types.string}\n    };\n    var eligible_types = Object.keys(u$.types).filter(function(n){\n      return !options.hasOwnProperty(n);\n    });\n    eligible_types.forEach(function(typeName){\n      options[typeName] = {\n        array: new Array(str_array.length) ,\n        hasMissing: false ,\n        type: u$.types[typeName] } ;\n    });\n    str_array.forEach(function(v,row){\n      if( u$.types.string.missing(v) ){\n        options.string.hasMissing = true;\n      }\n      for(var i = 0 ; i < eligible_types.length ; ){\n        var typeName = eligible_types[i];\n        var opt = options[typeName];\n        var parsed = opt.type.from_string(v,true /*strict*/);\n        if( opt.type.missing(parsed) ){\n          opt.hasMissing = true;\n        }\n        if( _.isUndefined(parsed) ){\n          delete options[typeName];\n          eligible_types.splice(i,1);\n        }else{\n          opt.array[row] = parsed;\n          i++;\n        }\n      }\n    });\n    return options;\n  };\n\n  u$.findTypeByValue=function(v){\n    for(var typeName in u$.types){\n      if(u$.types.hasOwnProperty(typeName)){\n        var type = u$.types[typeName];\n        if (type.is(v)) {\n          return type;\n        }\n      }\n    }\n    return u$.types.string;\n  };\n\n  u$.choose_column_type=function(ops){\n    var keys = Object.keys(ops);\n    if(keys.length == 1){\n      return ops[keys[0]];\n    }else{\n      for(var typeName in u$.types){\n        if (ops.hasOwnProperty(typeName)) {\n          return ops[typeName];\n        }\n      }\n    }\n  };\n\n// **ensureType(typeOrName)**\n//\n// returns type for name, or pass through type\n  u$.ensureType=function(typeOrName){\n    return typeOrName instanceof Type ? typeOrName : u$.types[typeOrName];\n  };\n\n})();\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/jshint-loader!./wdf/utils.js\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/lodash/index.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** (webpack)/buildin/module.js\n **/","// ## Private stuff\n//\n// methods and classes that not supposed to be used directly\n(function() {\n  \"use strict\";\n\n  var u$ = require(\"./utils\");\n  var _ = require(\"lodash\");\n\n// `Column` has `name`. Also `data` array is there to store all column's value.\n// Optionally if `type` defined when all `data` assumed to be casted to that type (\n// See [type](types.html) ). Also `col_idx` point on this column in column set.\n\n  var Column = function (name, len, type) {\n    this.name = name;\n    this.data = [];\n    if (len) {\n      this.data.length = len;\n    }\n    this.setType(type,false);\n  };\n\n  Column.prototype.coerceData = function(from_type){\n    for(var row = 0 ; row < this.data.length ; row++ ){\n      this.data[row] = this.type.coerce(this.data[row],from_type);\n    }\n  };\n\n  Column.prototype.detectData = function(){\n    if( u$.isNullish(this.type) || this.type.name === \"string\" ){\n      var options = u$.detect_possible_array_types(this.data);\n      var option = u$.choose_column_type(options);\n      if(option.type !== this.type){\n        this.setType(option.type,false);\n        this.data = option.array;\n      }\n    }\n  };\n\n  Column.prototype.setType = function(type,if_coerce){\n    var coerce_from = this.type;\n    this.type = u$.ensureType(type);\n    this.get = function (row) {\n      return this.data[row];\n    };\n    if( this.type ){\n      this.as_json = function(row){\n        return this.type.to_json(this.data[row]);\n      };\n      this.as_string = function(row) {\n        return this.type.to_string(this.data[row]);\n      };\n      this.set = function(row,v){\n        this.data[row] = this.type.coerce(v);\n      };\n      if(if_coerce && !u$.isNullish(coerce_from) ){\n        this.coerceData(coerce_from);\n      }\n    }else{\n      this.as_json = this.get ;\n      this.as_string = function(row) {\n        return u$.ensureString(this.data[row]) ;\n      };\n      this.set = function(row,v){\n        this.data[row] = v;\n      };\n    }\n  };\n\n// ColumnSet - store all columns `byIndex` in array and  `byName` in hashtable.\n  var ColumnSet = function () {\n    this.byIndex = [];\n    this.byName = {};\n  };\n\n// get column either by name or by index\n  ColumnSet.prototype.getColumn = function (name_or_idx) {\n    return (_.isNumber(name_or_idx) ? this.byIndex : this.byName )[name_or_idx];\n  };\n\n// enforce column by name\n  ColumnSet.prototype.enforceColumn = function (name, n_rows, type) {\n    var c = this.byName[name];\n    if (u$.isNullish(c)) {\n      c = new Column(name, n_rows, type);\n      c.col_idx = this.byIndex.length;\n      this.byIndex.push(c);\n      this.byName[name] = c;\n    }\n    return c;\n  };\n\n// enforce column by `col_idx`, `name` will be set to `'c'+col_idx`\n  ColumnSet.prototype.enforceColumnAt = function (col_idx, n_rows, type) {\n    var c = this.byIndex[col_idx];\n    if (u$.isNullish(c)) {\n      var name = \"c\" + col_idx;\n      c = new Column(name, n_rows, type);\n      c.col_idx = col_idx;\n      this.byIndex[col_idx] = c;\n      this.byName[name] = c;\n    }\n    return c;\n  };\n\n// add bunch of columns, preallocate array for `n_rows`\n  ColumnSet.prototype.addColumns = function (cols, n_rows) {\n    for (var i = 0; i < cols.length; i++) {\n      var name = cols[i], type;\n      if (_.isPlainObject(cols[i])) {\n        name = cols[i].name;\n        type = u$.ensureType(cols[i].type);\n      }\n      this.enforceColumn(name, n_rows, type);\n    }\n    return this;\n  };\n\n\n// ## <section id='DataFrame'>Dataframe</section>\n//\n// **new Dataframe(rows,columns)**:\n//    - `rows` - array of rows. row could be array or object.\n//    - `config` :\n//      - `columns` - array that contains column names or objects with `{name: \"colname\",type: \"number\"}`.\n// TODO documentation for config\n\n  var DataFrame = function (rows, config) {\n    var obj = this;\n    if (_.isUndefined(obj) || obj.constructor !== DataFrame) {\n      return new DataFrame(rows, config);\n    }\n    config = config || {};\n    rows = rows || [];\n    this.columnSet = new ColumnSet().addColumns(config.columns || [], rows.length);\n    this.index = _.range(rows.length);\n    for (var row = 0; row < rows.length; row++) {\n      var row_data = rows[row];\n      if (_.isPlainObject(row_data)) {\n        var keys = Object.keys(row_data);\n        for (var k = 0; k < keys.length; k++) {\n          this.columnSet.enforceColumn(keys[k]).set(row, row_data[keys[k]]);\n        }\n      } else if (_.isArray(row_data)) {\n        for (var col_idx = 0; col_idx < row_data.length; col_idx++) {\n          this.columnSet.enforceColumnAt(col_idx).set(row, row_data[col_idx]);\n        }\n      } else {\n        throw {msg: \"row should be object or array and not:\" + row_data};\n      }\n    }\n    return obj;\n  };\n\n  function make_df_from_(array_of_rows, config) {\n    config = config || {columns: array_of_rows.shift()};\n    return new DataFrame(array_of_rows, config);\n  }\n  function parse_csv_to_array_of_rows(str) {\n    var arr = [];\n    var quote = false;  // true means we're inside a quoted field\n\n    var row, col, c;\n    for (row = col = c = 0; c < str.length; c++) {\n      var cc = str[c], nc = str[c + 1];        // current character, next character\n      arr[row] = arr[row] || [];             // create a new row if necessary\n      arr[row][col] = arr[row][col] || '';   // create a new column (start with empty string) if necessary\n      if (cc === '\"' && quote && nc === '\"') { // if two quotes inside quoted field\n        arr[row][col] += cc;\n        ++c;\n        continue; // add quote and skip next char\n      }\n      if (cc === '\"') { // if lone quote\n        quote = !quote;\n        continue; // toggle quoted field\n      }\n      if (cc === ',' && !quote) { // if comma in the wild\n        ++col;\n        continue; // start next cell\n      }\n      if (cc === '\\n' && !quote) { // if new line in the wild\n        ++row;\n        col = 0;\n        continue;  // move to next row\n      }\n      arr[row][col] += cc; // or add char to current cell\n    }\n    return arr;\n  }\n\n  DataFrame.prototype.to_csv = function() {\n    var s = '' , col,row, v, cc;\n    for (col = 0; col < this.columnSet.byIndex.length; col++) {\n      if (col > 0 ) {\n        s+= ',' ;\n      }\n      s+= this.columnSet.byIndex[col].name;\n    }\n    s+= '\\n';\n    for (row = 0; row < this.getRowCount(); row++) {\n      for (col = 0; col < this.columnSet.byIndex.length; col++) {\n        if (col > 0 ) {\n          s+= ',' ;\n        }\n        v = this.get(row,col,'as_string');\n        if( v.indexOf('\"') >= 0 ||\n            v.indexOf(',') >= 0 ||\n            v.indexOf('\\n') >= 0 ){\n          s+='\"';\n          for (var i = 0; i < v.length; i++) {\n            cc = v[i];\n            if(cc==='\"') {\n              s += cc;\n            }\n            s+= cc;\n          }\n          s+='\"';\n        }else{\n          s+= v;\n        }\n      }\n      s+= '\\n';\n    }\n    return s;\n  };\n\n\n// **parse_csv(str,header)**\n//\n// parse comma separated values (CSV) format  provided in string `str`.\n// `header` is array with column names, if omitted first line of  CSV  in `str` considered header .\n\n  DataFrame.parse_csv = function (str, config) {\n    return make_df_from_(parse_csv_to_array_of_rows(str), config);\n  };\n\n\n  DataFrame.parse_wdf=function(str) {\n    var arr = str.split('\\n');\n    var config = JSON.parse(arr.shift());\n    var rows = arr.filter(u$.isStringNotEmpty).map(JSON.parse);\n    return new DataFrame(rows,config);\n  };\n\n  DataFrame.prototype.to_wdf=function(){\n    var s = '';\n    s+=JSON.stringify(this.getConfig());\n    s+='\\n';\n    this.apply(function(row){\n      s+=JSON.stringify(this.getJsonRow(row));\n      s+='\\n';\n    });\n    return s;\n  };\n\n  function parse_dom_table_to_array_of_rows(dom_table) {\n    return [].map.call(dom_table.rows, function (dom_row) {\n      return [].map.call(dom_row.cells, function (c) {\n        return c.textContent;\n      });\n    });\n  }\n\n  DataFrame.prototype.detectColumnTypes=function(list_of_columns){\n    list_of_columns = list_of_columns || this.getColumnNames();\n    for(var i = 0 ; i < list_of_columns.length ; i++){\n      var col = this.columnSet.byName[list_of_columns[i]];\n      col.detectData();\n    }\n  };\n\n// **parse_dom_table(dom_table, header)**\n//\n// parse comma separated values (CSV) format  provided in string `dom_table`.\n// `header` is array with column names, if omitted first row in  table\n// considered header .\n\n  DataFrame.parse_dom_table = function (dom_table, config) {\n    return make_df_from_(parse_dom_table_to_array_of_rows(dom_table), config);\n  };\n\n  DataFrame.prototype.getColumnNames=function(){\n    return Object.keys(this.columnSet.byName);\n  };\n\n\n// **getObjectRow(row_num,result)**\n//\n// get row out of DataFrame as plain object.\n//    - `row_num` - row number\n\n  DataFrame.prototype.getObjectRow = function (row_num) {\n    var ph_row = this.index[row_num];\n    var result =  {};\n    this.columnSet.byIndex.forEach(function (c) {\n          result[c.name] = c.get(ph_row);\n        });\n    return result;\n  };\n// **getObjectRow(row_num,result)**\n//\n// get row out of DataFrame as array (no type conversion).\n//    - `row_num` - row number\n//    - `fn` - how to extract value: `get()` or `as_json()`\n  DataFrame.prototype.getArrayRow = function (row_num,fn) {\n    fn = fn || 'get';\n    var ph_row = this.index[row_num];\n    var result = [];\n    result.length = this.columnSet.byIndex.length ;\n    this.columnSet.byIndex.forEach( function (c, col_idx) {\n          result[col_idx] = c[fn](ph_row);\n        });\n    return result;\n  };\n// **getJsonRow(row_num)**\n//\n// get data row as array with dates converted to string\n// for json\n//    - `row_num` - row number\n\n  DataFrame.prototype.getJsonRow = function (row_num) {\n    return this.getArrayRow(row_num,'as_json');\n  };\n\n// **get(row,col)**\n//\n// get one value out of DataFrame\n//   - `row_num` - row number\n//   - `col` - column index or column name\n//\n  DataFrame.prototype.get = function (row_num, col,fn) {\n    fn = fn || 'get' ;\n    var ph_row = this.index[row_num];\n    var c = this.columnSet.getColumn(col);\n    return c[fn](ph_row);\n  };\n// **set(row_num,col,v)**\n//\n// set value in one cell of DataFrame\n//   - `row_num` - row number\n//   - `col` - column index or column name\n//   - `v` -  value to set\n  DataFrame.prototype.set = function (row_num, col, v) {\n    var ph_row = this.index[row_num];\n    var c = this.columnSet.getColumn(col);\n    c.set(ph_row,v);\n  };\n\n// **getRowCount()**\n//\n// get row count\n  DataFrame.prototype.getRowCount = function () {\n    return this.index.length;\n  };\n//**newRow()**\n//\n//add new row. Returns new row number.\n  DataFrame.prototype.newRow = function () {\n    var new_row_num = this.index.length;\n    this.index[new_row_num] = new_row_num;\n    return new_row_num;\n  };\n//**deleteRow(row_num)**\n//\n//delete row by `row_num`.\n  DataFrame.prototype.deleteRow = function (row_num) {\n    this.index.splice(row_num, 1);\n  };\n// getColumn(col)\n//\n// get all data out column. returns array of values\n//   - `col` - column index or column name\n  DataFrame.prototype.getColumn = function (col) {\n    var c = this.columnSet.getColumn(col);\n    if (c) {\n      return this.index.map(function (idx) {\n        return c.get(idx);\n      });\n    }\n    return undefined;\n  };\n// ** apply(logic) **\n//\n// run `logic(df,row_num)` function on all rows of DataFrame\n//\n//\n  DataFrame.prototype.apply = function (logic) {\n    for (var row_num = 0; row_num < this.index.length; row_num++) {\n      logic.call(this, row_num);\n    }\n  };\n// ** map(logic) **\n//\n// run `logic(df,row_num)` function on all rows of DataFrame.\n// Collect results from each run into array. `undefined` results\n// will not be included in array.\n//\n//\n  DataFrame.prototype.map = function (logic) {\n    var collector = [], r;\n    for (var row_num = 0; row_num < this.index.length; row_num++) {\n      r = logic.call(this, row_num);\n      if (r !== undefined) {\n        collector.push(r);\n      }\n    }\n    return collector;\n  };\n// **getData()**\n//\n// Get all data in structure:\n// returns {Object}\n//   - config :\n//     - columns - columns array\n//       - name - column name\n//       - type - column type, if defined\n//   - rows - array of rows. each row array of values.\n//\n\n  DataFrame.prototype.getConfig=function () {\n    var config = { columns : []};\n    for (var col = 0; col < this.columnSet.byIndex.length; col++) {\n      var column = this.columnSet.byIndex[col];\n      var col_def = {name: column.name};\n      if (column.type) {\n        col_def.type = column.type.name;\n      }\n      config.columns.push(col_def);\n    }\n    return config;\n  };\n\n  DataFrame.prototype.getData = function () {\n    var r = { config: this.getConfig(), rows: []};\n    r.rows = this.map( this.getArrayRow ) ;\n    return r;\n  };\n\n  DataFrame.prototype.setColumnType = function (col,new_type) {\n    this.columnSet.getColumn(col).setType(new_type);\n  };\n\n// **getObjects()**\n//\n// returns all rows in  array , each row is object\n// with column names pointing to values\n//\n\n  DataFrame.prototype.getObjects = function () {\n    return this.map( this.getObjectRow );\n  };\n\n  module.exports = DataFrame;\n\n\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./~/jshint-loader!./wdf/DataFrame.js\n **/"],"sourceRoot":""}